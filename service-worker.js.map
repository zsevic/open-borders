{"version":3,"sources":["service-worker.js"],"names":["cacheName","filesToCache","self","addEventListener","e","console","log","waitUntil","caches","open","then","cache","addAll","event","clients","claim","respondWith","match","request","ignoreSearch","response","fetch"],"mappings":";AAAA,MAAMA,EAAY,mBACZC,EAAe,CAAC,KAEtBC,KAAKC,iBAAiB,UAAYC,IAChCC,QAAQC,IAAI,2BACZF,EAAEG,UACAC,OAAOC,KAAKT,GAAWU,KAAMC,IAC3BN,QAAQC,IAAI,qCACLK,EAAMC,OAAOX,QAK1BC,KAAKC,iBAAiB,WAAaU,IACjCA,EAAMN,UAAUL,KAAKY,QAAQC,WAG/Bb,KAAKC,iBAAiB,QAAUU,IAC9BA,EAAMG,YACJR,OACGS,MAAMJ,EAAMK,QAAS,CAAEC,cAAc,IACrCT,KAAMU,GAAaA,GAAYC,MAAMR,EAAMK","file":"service-worker.js","sourceRoot":"../src","sourcesContent":["const cacheName = 'otvorene-granice';\nconst filesToCache = ['/'];\n\nself.addEventListener('install', (e) => {\n  console.log('[ServiceWorker] Install');\n  e.waitUntil(\n    caches.open(cacheName).then((cache) => {\n      console.log('[ServiceWorker] Caching app shell');\n      return cache.addAll(filesToCache);\n    }),\n  );\n});\n\nself.addEventListener('activate', (event) => {\n  event.waitUntil(self.clients.claim());\n});\n\nself.addEventListener('fetch', (event) => {\n  event.respondWith(\n    caches\n      .match(event.request, { ignoreSearch: true })\n      .then((response) => response || fetch(event.request)),\n  );\n});\n"]}